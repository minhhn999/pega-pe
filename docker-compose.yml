version: '3.3'

services:

  #Start pega backend DB
  postgresql-pega-backend:

    container_name: postgresql-pega
    
    build:
      dockerfile: Dockerfile
      context: ./Postgresql-BackendDB
    
    ports:
      - 5432:5432
    
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # substitute with db password
      - POSTGRES_USER=${POSTGRES_USER}  # substitute with db user
      - POSTGRES_DB=${POSTGRES_DB}  # substitute with db name
    # - POSTGRES_INITDB_ARGS=-T template0 -E 'UTF8'

    #command: ["scripts/check_ready.sh"]
    
    volumes:
      - ${PEGA_DUMP}:/tmp/resources/  #substitue ${PEGA_DUMP} with directory holding pega.dump file

  #Start pega prweb 
  pega-prpc-pe:
    
    container_name: pega

    build:
      dockerfile: Dockerfile
      context: ./PegaPRPC-WebApp

    environment:
      - JDBC_URL=jdbc:postgresql://postgresql-pega-backend/${POSTGRES_DB}   #replace this with your postgresql installation ip
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=5432
      - JDBC_CLASS=org.postgresql.Driver      
      
    ports:
      - 8080:8080     #Use this line only if you have other webservers running on port 8080
      
    # ignore the below labels if you don't use traefik reverse proxy 
    labels:
      - "traefik.backend=pega"
      - "traefik.port=8080"
      - traefik.enable=true
      - "traefik.frontend.rule=Host:pega.docker.localhost"    

    # # this makes sure that pega backend is running before pega prpc is launched
    # depends_on:
    #  - postgresql-pega-backend